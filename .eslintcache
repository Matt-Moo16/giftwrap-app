[{"/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/index.js":"1","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/App.js":"2","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/Header/Header.js":"3","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/HomePage/HomePage.js":"4","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/SignUpForm/SignUpForm.js":"5","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/AddName/AddName.js":"6","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/LandingPage/LandingPage.js":"7","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/GiftList/GiftList.js":"8","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/SignInForm/SignInForm.js":"9","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/AddGift/AddGift.js":"10","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/APIService.js":"11","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/config.js":"12","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/ValidationError.js":"13","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/TokenService.js":"14","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/PrivateRoute.js":"15"},{"size":250,"mtime":1609652018076,"results":"16","hashOfConfig":"17"},{"size":2684,"mtime":1611684537251,"results":"18","hashOfConfig":"17"},{"size":634,"mtime":1611614006441,"results":"19","hashOfConfig":"17"},{"size":1506,"mtime":1611684980570,"results":"20","hashOfConfig":"17"},{"size":6630,"mtime":1611614387063,"results":"21","hashOfConfig":"17"},{"size":2464,"mtime":1611630925753,"results":"22","hashOfConfig":"17"},{"size":1684,"mtime":1611613889183,"results":"23","hashOfConfig":"17"},{"size":3829,"mtime":1611632499634,"results":"24","hashOfConfig":"17"},{"size":4621,"mtime":1611614390091,"results":"25","hashOfConfig":"17"},{"size":3559,"mtime":1611631234803,"results":"26","hashOfConfig":"17"},{"size":3241,"mtime":1611353661894,"results":"27","hashOfConfig":"17"},{"size":181,"mtime":1611365172666,"results":"28","hashOfConfig":"17"},{"size":209,"mtime":1611029202245,"results":"29","hashOfConfig":"17"},{"size":535,"mtime":1611296327099,"results":"30","hashOfConfig":"17"},{"size":998,"mtime":1611354881112,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1vhx8qk",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/index.js",[],["70","71"],"/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/App.js",["72"],"import React, {Component} from 'react';\nimport SignInForm from './Components/SignInForm/SignInForm'\nimport HomePage from './Components/HomePage/HomePage'\nimport {Route} from 'react-router-dom'\nimport SignUpForm from './Components/SignUpForm/SignUpForm'\nimport Header from './Components/Header/Header'\nimport LandingPage from './Components/LandingPage/LandingPage'\nimport AddName from './Components/AddName/AddName'\nimport GiftList from './Components/GiftList/GiftList'\nimport AddGift from './Components/AddGift/AddGift'\nimport './App.css'\nimport PrivateRoute from './Components/PrivateRoute'\nimport TokenService from './Components/TokenService'\n\n\n\nclass App extends Component { \n  \n  render() {\n    return (\n      <main className='App'>\n        <Route exact path='/' component={HomePage}/> \n        <Route path='/signIn' component={SignInForm}/> \n        <Route path='/signUp' component={SignUpForm}/>\n        <PrivateRoute>\n        <Route path='/authenticated/:user_id' render={\n                (routeProps) => {\n                const userId = routeProps.match.params.user_id\n                return <Header userId={userId}/>\n                }\n              } />\n        </PrivateRoute>\n        <PrivateRoute >\n          <Route exact path='/authenticated/:user_id/add_name' render={\n                (routeProps) => {\n                const userId = routeProps.match.params.user_id\n                return <AddName userId={userId}/>\n                }\n              } />\n        </PrivateRoute>\n        <PrivateRoute >\n          <Route exact path='/authenticated/:user_id/add_gift/:name_id' render={\n              (routeProps) => {\n                const nameId = routeProps.match.params.name_id\n                const userId = routeProps.match.params.user_id\n                return <AddGift userId={userId} nameId={nameId}/>\n              }\n            } />\n        </PrivateRoute>\n        <PrivateRoute>\n            <Route exact path='/authenticated/:user_id/:name_id/gifts' render={\n              (routeProps) => {\n                const nameId = routeProps.match.params.name_id\n                const userId = routeProps.match.params.user_id\n                return <GiftList userId={userId} nameId={nameId}/>\n              }\n            } />\n          </PrivateRoute>\n        <PrivateRoute>\n          <Route exact path='/authenticated/:user_id' render={\n              (routeProps) => {\n              const userId = routeProps.match.params.user_id\n              return <LandingPage userId={userId}/>\n              }\n            } />\n        </PrivateRoute>\n      </main>\n    );\n  }\n  \n}\n\nexport default App;\n\n//if hasAuthToken === true get user id and render components that has user id\n\n\n","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/Header/Header.js",[],"/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/HomePage/HomePage.js",["73","74","75","76"],"import React from 'react'\nimport {Link} from 'react-router-dom'\nimport './HomePage.css'\n\nfunction HomePage() {\n    return (\n        <div className='HomePage'>\n            <header>\n                <h1>Giftwrap</h1>\n            </header>\n            <div className='diff-color'>\n            <img src='https://i.postimg.cc/MGjWJr2v/Person2-removebg-preview.png' width='200'></img>\n                <h2>Your all-in-one gift solution</h2>\n                <p>Manage your Christmas, Holiday, Birthday or any other gifting occasion in one easy convient location.</p>\n                <button >\n                <Link to='/signIn'\n                className='get-started'>Get Started</Link>\n            </button>\n            </div>\n            <div>\n                <h2>How It Works</h2>\n            </div>\n            <div className='image-div'>\n                <div className='box'>\n                    <h3>Add Names</h3>\n                    <img src='https://i.postimg.cc/mrq4rxWQ/Lady-at-computer-removebg-preview.png'></img>\n                </div>\n                <div className='box'>\n                    <h3>Add Gifts</h3>\n                    <img src='https://i.postimg.cc/nr7X0cTc/Present2-removebg-preview.png'></img>\n                </div>\n                <div className='box'>\n                    <h3>We Do The Rest</h3>\n                    <img src='https://i.postimg.cc/dVskvF4D/People1-removebg-preview.png'></img>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/SignUpForm/SignUpForm.js",["77"],"import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport './SignUpForm.css'\nimport ApiService from '../APIService'\nimport ValidationError from '../ValidationError'\n\n\nclass SignUpForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state={\n            name: {\n                value: '',\n                touched: false\n            },\n            email: {\n                value: '',\n                touched: false\n            },\n            password: {\n                value: '',\n                touched: false\n            },\n            confirmPassword: {\n                value: '',\n                touched: false\n            },\n            hasError: false,\n            error: ''\n        }\n    } \n\n    updateName(name) {\n        this.setState({name: {value: name, touched: true}})\n    }\n\n    updateEmail(email) {\n        this.setState({email: {value: email, touched: true}})\n    }\n\n    updatePassword(password) {\n        this.setState({password: {value: password, touched: true}})\n    }\n\n    updateConfirmPassword(confirmPassword) {\n        this.setState({confirmPassword: {value: confirmPassword, touched: true}})\n    }\n\n    validateName() {\n        const name = this.state.name.value.trim()\n        if (name.length === 0) {\n            return 'Name is required'\n        }\n    }\n\n    validateEmail() {\n        const email = this.state.email.value.trim()\n        if (email.length === 0) {\n            return 'Email is required'\n        }\n    }\n\n    validatePassword() {\n        const password = this.state.password.value.trim()\n        if (password.length === 0) {\n            return 'Password is required'\n        }\n        if (password.length < 8 || password.length > 72) {\n            return 'Password must be between 8 and 72 characters'\n        }\n    }\n\n    validateConfirmPassword() {\n        const confirmPassword = this.state.confirmPassword.value.trim()\n        const password = this.state.password.value.trim()\n\n        if (confirmPassword !== password) {\n            return 'Passwords do not match'\n        }\n    }\n\n\n\n    render() {\n        const user = {name: this.state.name.value, email: this.state.email.value, password: this.state.password.value} \n        const nameError = this.validateName()\n        const emailError = this.validateEmail()\n        const passwordError = this.validatePassword()\n        const confirmPasswordError = this.validateConfirmPassword()\n        \n        return (\n            <>\n                <header>\n                    <Link to='/'><h1>Giftwrap</h1></Link>\n                </header>\n                <div className='center'>\n                <img src='https://i.postimg.cc/hjh2dp6L/Person3-removebg-preview.png'></img>\n                </div>\n                <div className='background'>\n                    <div className='SignUpDiv'>  \n                    {this.state.hasError && <ValidationError message={this.state.error}/>}\n                        <form className='SignUpForm' >\n                            <div className='name'>\n                                <label htmlFor='SignUp_name'>\n                                    Name:\n                                </label>\n                                <input type='text'\n                                name='name'\n                                id='SignUp_name'\n                                onChange={e => this.updateName(e.target.value)}/>\n                                {this.state.name.touched && <ValidationError message={nameError}/>}\n                            </div>\n                            <div className='email'>\n                                <label htmlFor='SignUp_email'>\n                                    Email:\n                                </label>\n                                <input \n                                type='email'\n                                name='email'\n                                id='SignUp_email'\n                                onChange={e => this.updateEmail(e.target.value)} />\n                                {this.state.email.touched && <ValidationError message={emailError}/>}\n                            </div>\n                            <div className='password'>\n                                <label htmlFor='SignUp_password'>\n                                    Password:\n                                </label>\n                                <input \n                                type='password'\n                                name='password'\n                                id='SignUp_password' \n                                onChange={e => this.updatePassword(e.target.value)}/>\n                                {this.state.password.touched && <ValidationError message={passwordError}/>}\n                            </div>\n                            <div className='confirmPassword'>\n                                <label htmlFor='SignUp_confirmPassword'>\n                                    Confirm Password:\n                                </label>\n                                <input \n                                type='password'\n                                name='confirmPassword'\n                                id='SignUp_confirmPassword'\n                                onChange={e => this.updateConfirmPassword(e.target.value)}/>\n                                {this.state.confirmPassword.touched && <ValidationError message={confirmPasswordError}/>}\n                            </div>\n                            <div className='button'>\n                                <button type='submit' \n                                onClick={e => {\n                                    try {\n                                        ApiService.postUser(user)\n                                        }\n                                        catch(err) {\n                                            this.setState({hasError: true, error: err})\n                                        }\n                                        }}\n                                        disabled={\n                                            this.validateName() ||\n                                            this.validateEmail() ||\n                                            this.validatePassword() ||\n                                            this.validateConfirmPassword() \n                                        }>\n                                        Sign Up\n                                </button> \n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default SignUpForm","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/AddName/AddName.js",[],"/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/LandingPage/LandingPage.js",[],"/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/GiftList/GiftList.js",["78"],"import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport './GiftList.css'\nimport ApiService from '../APIService'\nimport config from '../../config'\nimport TokenService from '../TokenService'\n\nclass GiftList extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state= {\n            name: '',\n            gifts: [],\n            hasError: false,\n            error: ''\n        }\n    }\n    \n    componentDidMount() {\n        const encodedKey = btoa('matt.roger.m@gmail.com:' + config.API_TOKEN)\n        ApiService.getName(this.props.nameId, TokenService.getAuthToken())\n        .then(res => {\n            this.setState({name: res.name})\n        })\n        ApiService.getGifts()\n        .then(res => {\n            const filteredGifts = res.filter(gift => gift.name_id === parseInt(this.props.nameId))\n            if (filteredGifts.length === 0) {\n            }\n            filteredGifts.map(gift => {\n                return fetch(`https://cors-anywhere.herokuapp.com/https://api.urlmeta.org/?url=${encodeURIComponent(gift.url)}`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Basic ${encodedKey}`,\n                    },\n                })\n                .then(response => response.json())\n                .then(ogRes => {\n                    if(ogRes.result.status === \"OK\") {\n                        let obj = {\n                            description: ogRes.meta.description,\n                            image: ogRes.meta.image,\n                            title: ogRes.meta.title,\n                            url: gift.url,\n                            nameId: gift.name_id,\n                            price: gift.price,\n                            id: gift.id\n                        }\n                        this.setState({gifts: [...this.state.gifts, obj]})\n                    }\n                    else {\n                        this.setState({\n                            hasError: true, \n                            error: ogRes.result.reason\n                        })\n                    }\n                })\n            })\n        })\n    }\n\n    handleDelete(giftId, event) {\n        ApiService.deleteGift(giftId, TokenService.getAuthToken())\n        .then(() => {\n            this.setState({gifts: this.state.gifts.filter(gift => gift.id !== giftId)})\n          })\n          .catch(error => {\n            this.setState({hasError: true, error: error})\n          })\n    }\n\n    render() {\n        const giftList = this.state.gifts\n        return (\n            <div className='GiftList'>\n                <h2>{this.state.name}</h2>\n                {this.state.gifts.length !== 0 ?  \n                <ul>\n                    {giftList.map((gift, i) => {\n                        return <li key={i}>\n                            {gift.image ? <img src={gift.image} width='200' height='200' alt='Not Found' /> : <img src='https://i.postimg.cc/wvZLTr3Z/Gift1-removebg-preview.png'/>}\n                            <a href={gift.url} target='_blank' rel='noreferrer'><h2>{gift.title}</h2></a>\n                            <p>{gift.description}</p>\n                            <h3>${gift.price}</h3>\n                            <button type='delete' \n                            onClick={e => this.handleDelete(gift.id, e)}>\n                                Delete Gift\n                            </button>\n                        </li>\n                    })}\n                </ul> \n                : <div>Loading...</div>}\n                <button>\n                    <Link to={`/authenticated/${this.props.userId}/add_gift/${this.props.nameId}`}>Add Gift</Link>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default GiftList","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/SignInForm/SignInForm.js",["79"],"import React, {Component} from 'react';\nimport './SignInForm.css'\nimport {Link} from 'react-router-dom'\nimport ApiService from '../APIService'\nimport ValidationError from '../ValidationError'\nimport TokenService from '../TokenService'\n\n\n\nclass SignInForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: {\n                value: '',\n                touched: false\n            },\n            password: {\n                value: '',\n                touched: false\n            },\n            hasError: false,\n            error: '',\n            userIsAuthenticated: false,\n            userId: 0,\n        }\n    }\n\n    \n\n\n    validateEmail() {\n        const email = this.state.email.value.trim()\n        if(email.length === 0) {\n            return 'Email is required'\n        }\n    }\n\n    validatePassword() {\n        const password = this.state.password.value.trim()\n        if (password.length === 0) {\n            return 'Password is required'\n        }\n    }\n\n    updateEmail(email) {\n        this.setState({email: {value: email, touched: true}})\n    }\n\n    updatePassword(password) {\n        this.setState({password: {value: password, touched: true}})\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n       const email = this.state.email.value\n       const password = this.state.password.value\n        ApiService.postLogin({email, password})\n        .then(response => {\n            if (response.error) {\n                this.setState({hasError: true, error: response.error}) \n            } else {\n                TokenService.saveAuthToken(response.authToken)\n                this.setState({userIsAuthenticated: true, userId: response.userId})\n                var getUrl = window.location;\n                var baseUrl = getUrl.protocol + \"//\" + getUrl.host + `/authenticated/${this.state.userId}`;\n                window.location.href = baseUrl\n            }\n\n        })\n        .catch((response) => {\n            this.setState({hasError: true, error: response.error}) \n        })\n    }\n    \n\n    render() {\n        const emailError = this.validateEmail()\n        const passwordError = this.validatePassword()\n        return (\n            <>\n                <header>\n                    <Link to='/'><h1>Giftwrap</h1></Link>\n                </header>\n                <div className='center'>\n                    <img src='https://i.postimg.cc/kgY4mb2h/Person1-removebg-preview.png' width='200'></img>\n                </div>\n                <div className='background'>\n                    <div className=\"SignInDiv\">\n                        {this.state.hasError && (<ValidationError message={this.state.error}/>)}\n                        <form className='SignInForm' >\n                            <div className='email'>\n                                <label htmlFor='SignIn_email'>\n                                    Email: \n                                </label>\n                                <input\n                                type='email' \n                                name='email'\n                                id='SignIn_email'\n                                onChange={e => this.updateEmail(e.target.value)}/>\n                                {this.state.email.touched && (<ValidationError message={emailError}/>)}\n                            </div>\n                            <div className='password'>\n                                <label htmlFor='SignIn_password'>Password:</label>\n                                <input \n                                type='password'\n                                name='password'\n                                id='SignIn_password'\n                                onChange={e => this.updatePassword(e.target.value)}/> \n                                {this.state.password.touched && (<ValidationError message={passwordError}/>)}\n                            </div>\n                            <div className='sign-in-button'>\n                                <button type='submit' \n                                disabled={this.validateEmail() || this.validatePassword()}\n                                onClick={e => this.handleSubmit(e)}>Sign In</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                    <div className='link'>\n                        <button>\n                            <Link to='/signUp'>Sign Up Here!</Link>\n                        </button>\n                        \n                    </div>\n                \n            </> \n        );\n    }\n}\n\nexport default SignInForm","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/AddGift/AddGift.js",[],"/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/APIService.js",[],["80","81"],"/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/config.js",["82"],"export default {\n    API_ENDPOINT: 'https://enigmatic-sands-97523.herokuapp.com/api',\n    TOKEN_KEY: process.env.REACT_APP_AUTH_TOKEN,\n    API_TOKEN: process.env.REACT_APP_API_KEY\n}","/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/ValidationError.js",[],"/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/TokenService.js",[],"/Users/MattMoore/Documents/capstone-projects/giftwrap-app/src/Components/PrivateRoute.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":13,"column":8,"nodeType":"89","messageId":"90","endLine":13,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":12,"column":13,"nodeType":"93","endLine":12,"endColumn":95},{"ruleId":"91","severity":1,"message":"92","line":26,"column":21,"nodeType":"93","endLine":26,"endColumn":100},{"ruleId":"91","severity":1,"message":"92","line":30,"column":21,"nodeType":"93","endLine":30,"endColumn":92},{"ruleId":"91","severity":1,"message":"92","line":34,"column":21,"nodeType":"93","endLine":34,"endColumn":91},{"ruleId":"91","severity":1,"message":"92","line":98,"column":17,"nodeType":"93","endLine":98,"endColumn":87},{"ruleId":"91","severity":1,"message":"92","line":83,"column":111,"nodeType":"93","endLine":83,"endColumn":180},{"ruleId":"91","severity":1,"message":"92","line":86,"column":21,"nodeType":"93","endLine":86,"endColumn":103},{"ruleId":"83","replacedBy":"94"},{"ruleId":"85","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":1,"nodeType":"98","endLine":5,"endColumn":2},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'TokenService' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["99"],["100"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]